[debug] [2022-03-25T14:27:21.118Z] ----------------------------------------------------------------------
[debug] [2022-03-25T14:27:21.120Z] Command:       C:\Program Files (x86)\nodejs\node.exe C:\Users\cheun\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js ext:install firebase/firestore-send-email --project=sunnus-22
[debug] [2022-03-25T14:27:21.121Z] CLI Version:   10.5.0
[debug] [2022-03-25T14:27:21.121Z] Platform:      win32
[debug] [2022-03-25T14:27:21.121Z] Node Version:  v14.17.0
[debug] [2022-03-25T14:27:21.122Z] Time:          Fri Mar 25 2022 22:27:21 GMT+0800 (Taipei Standard Time)
[debug] [2022-03-25T14:27:21.123Z] ----------------------------------------------------------------------
[debug] 
[debug] [2022-03-25T14:27:21.137Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2022-03-25T14:27:21.137Z] > authorizing via signed-in user (ryan9cheung@gmail.com)
[debug] [2022-03-25T14:27:21.137Z] [iam] checking project sunnus-22 for permissions ["firebase.projects.get","firebaseextensions.instances.create"]
[debug] [2022-03-25T14:27:21.139Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:testIamPermissions [none]
[debug] [2022-03-25T14:27:21.139Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2022-03-25T14:27:22.228Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:testIamPermissions 200
[debug] [2022-03-25T14:27:22.229Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2022-03-25T14:27:22.233Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/firebaseextensions.googleapis.com [none]
[debug] [2022-03-25T14:27:23.638Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/firebaseextensions.googleapis.com 200
[debug] [2022-03-25T14:27:23.638Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/firebaseextensions.googleapis.com {"name":"projects/114067060360/services/firebaseextensions.googleapis.com","config":{"name":"firebaseextensions.googleapis.com","title":"Firebase Extensions API","apis":[{"name":"google.discovery.Discovery","methods":[{"name":"GetDiscovery"},{"name":"GetDiscoveryRest"}],"version":"v1"},{"name":"google.firebase.extensions.v1beta.ExtensionsService","methods":[{"name":"GetExtensionSource"},{"name":"CreateExtensionSource"},{"name":"GetExtensionInstance"},{"name":"ListExtensionInstances"},{"name":"CreateExtensionInstance"},{"name":"UpdateExtensionInstance"},{"name":"DeleteExtensionInstance"},{"name":"PublishExtensionVersion"},{"name":"DeleteExtension"},{"name":"DeleteExtensionVersion"},{"name":"UnpublishExtension"},{"name":"UnpublishExtensionVersion"},{"name":"DeprecateExtensionVersion"},{"name":"UndeprecateExtensionVersion"},{"name":"GetExtension"},{"name":"BatchGetExtensions"},{"name":"GetExtensionVersion"},{"name":"ListExtensions"},{"name":"ListExtensionVersions"},{"name":"RegisterPublisherProfile"},{"name":"GetPublisherProfile"},{"name":"GetOperation"}],"version":"v1beta"}],"documentation":{},"quota":{},"authentication":{"rules":[{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/firebase,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/firebase.readonly"}}]},"usage":{"requirements":["serviceusage.googleapis.com/tos/universal"]},"endpoints":[{"name":"firebaseextensions.googleapis.com"},{"name":"firebaseextensions.clients6.google.com"},{"name":"content-firebaseextensions.googleapis.com"},{"name":"firebaseextensions.mtls.googleapis.com"},{"name":"firebaseextensions.mtls.clients6.google.com"},{"name":"content-firebaseextensions.mtls.googleapis.com"}],"monitoredResources":[{"type":"firebaseextensions.googleapis.com/ExtensionVersion","displayName":"Firebase Extension Version","description":"A published version of a Firebase extension.","labels":[{"key":"resource_container","description":"The GCP project number used to publish the extension."},{"key":"location","description":"Location of the published Firebase extension version (always set to \"global\")."},{"key":"publisher","description":"The publisher of the published extension."},{"key":"extension","description":"The name of the published extension."},{"key":"version","description":"The version of the published extension."}],"launchStage":"EARLY_ACCESS"}],"monitoring":{"consumerDestinations":[{"monitoredResource":"firebaseextensions.googleapis.com/ExtensionVersion","metrics":["firebaseextensions.googleapis.com/extension/version/operation_count","firebaseextensions.googleapis.com/internal/extension/version/active_instances"]}]}},"state":"ENABLED","parent":"projects/114067060360"}
[info] +  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2022-03-25T14:27:23.641Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 [none]
[debug] [2022-03-25T14:27:23.969Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 200
[debug] [2022-03-25T14:27:23.970Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 {"projectId":"sunnus-22","projectNumber":"114067060360","displayName":"sunnus-22","name":"projects/sunnus-22","resources":{"hostingSite":"sunnus-22","storageBucket":"sunnus-22.appspot.com","locationId":"us-central"},"state":"ACTIVE"}
[info] i  extensions: Checking project IAM policy... 
[debug] [2022-03-25T14:27:23.973Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances pageSize=100&pageToken=
[debug] [2022-03-25T14:27:25.251Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances 200
[debug] [2022-03-25T14:27:25.251Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances {}
[debug] [2022-03-25T14:27:25.251Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:getIamPolicy [none]
[debug] [2022-03-25T14:27:26.378Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:getIamPolicy 200
[debug] [2022-03-25T14:27:26.378Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/sunnus-22:getIamPolicy {"version":1,"etag":"BwXaO5al+LE=","bindings":[{"role":"roles/editor","members":["serviceAccount:114067060360@cloudservices.gserviceaccount.com","serviceAccount:sunnus-22@appspot.gserviceaccount.com","user:benjytan45678@gmail.com","user:jiehui285@gmail.com","user:ryan9cheung@gmail.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com","serviceAccount:service-114067060360@gcp-sa-firebase.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-114067060360@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:brew4k@gmail.com","user:sunnusdeveloper@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]}]}
[debug] {"version":1,"etag":"BwXaO5al+LE=","bindings":[{"role":"roles/editor","members":["serviceAccount:114067060360@cloudservices.gserviceaccount.com","serviceAccount:sunnus-22@appspot.gserviceaccount.com","user:benjytan45678@gmail.com","user:jiehui285@gmail.com","user:ryan9cheung@gmail.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com","serviceAccount:service-114067060360@gcp-sa-firebase.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-114067060360@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:brew4k@gmail.com","user:sunnusdeveloper@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-114067060360@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-z5ouq@sunnus-22.iam.gserviceaccount.com"]}]}
[info] +  extensions: Project IAM policy OK 
[debug] [2022-03-25T14:27:26.382Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email [none]
[debug] [2022-03-25T14:27:27.436Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email 200
[debug] [2022-03-25T14:27:27.436Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email {"name":"publishers/firebase/extensions/firestore-send-email","ref":"firebase/firestore-send-email","latestVersion":"0.1.15","latestVersionCreateTime":"2022-03-07T16:49:47.579531Z","state":"PUBLISHED","createTime":"2021-03-18T22:02:59.748671Z","visibility":"PUBLIC","registryLaunchStage":"BETA","iconUri":"https://www.gstatic.com/mobilesdk/200707_mobilesdk/trigger_email_120@2x.png","publisher":{"iconUri":"https://www.gstatic.com/mobilesdk/160503_mobilesdk/logo/2x/firebase_128dp.png"}}
[debug] [2022-03-25T14:27:27.440Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/latest [none]
[debug] [2022-03-25T14:27:28.710Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/latest 200
[debug] [2022-03-25T14:27:28.710Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/firestore-send-email/versions/latest {"name":"publishers/firebase/extensions/firestore-send-email/versions/0.1.15","ref":"firebase/firestore-send-email@0.1.15","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.1.15","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)","required":true,"example":"smtps://username@smtp.hostname.com:465","validationRegex":"^smtps?://[^:]+@.*$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port`."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document."}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console.\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n","readmeContent":"# Trigger Email\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nOr in Firestore the following fields can be added:\n\n| Field       | Type        | Example                                                                                 |\n| ----------- | ----------- | --------------------------------------------------------------------------------------- |\n| `to`        | String      | `\"someone@example.com\"`                                                                 |\n| `message`   | Map         | `{ subject: \"Hello from Firebase!\", html: \"This is an <code>HTML</code> email body.\" }` |\n\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and password)\n\n* SMTP password: User password for the SMTP server\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document).  You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, if the template is specified in the added email document.\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email"},"state":"PUBLISHED","hash":"4617c9f7d1f4b721694fc4c3169c63e1fae3a8ce9c0d0bf38a5e663b5940616f","createTime":"2022-03-07T16:49:47.579531Z","sourceDownloadUri":"https://storage.googleapis.com/firebase-mod-sources-prod/4617c9f7d1f4b721694fc4c3169c63e1fae3a8ce9c0d0bf38a5e663b5940616f","releaseNotes":"fixed - generate correct `package-lock.json` files after `lerna bootstrap` (#779)\n\nfixed - added local smtp server for running tests (#794)\n\nfixed - add SMTP secret password (#840)\n\nfixed - added logging for invalid email messages, documentation updated with firestore example (#710)\n\nfixed - update validate workflow to use node14\n"}
[info] i  extensions: information about 'firebase/firestore-send-email@latest': 
[info] Name: Trigger Email
Publisher: firebase
Description: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.
License: Apache-2.0
Source code: https://github.com/firebase/extensions/tree/master/firestore-send-email

[debug] [2022-03-25T14:27:28.725Z] >>> [apiv2][query] GET https://extensions-registry.firebaseapp.com/extensions.json [none]
[debug] [2022-03-25T14:27:28.846Z] <<< [apiv2][status] GET https://extensions-registry.firebaseapp.com/extensions.json 200
[debug] [2022-03-25T14:27:28.846Z] <<< [apiv2][body] GET https://extensions-registry.firebaseapp.com/extensions.json {"mods":{"auth-mailchimp-sync":{"publisher":"firebase"},"delete-user-data":{"publisher":"firebase"},"firestore-algolia-search":{"publisher":"algolia"},"firestore-auth-claims":{"publisher":"firebase"},"firestore-bigquery-export":{"publisher":"firebase"},"firestore-bundle-server":{"publisher":"firebase"},"firestore-counter":{"publisher":"firebase"},"firestore-detect-presence":{"publisher":"firebase"},"firestore-messagebird-send-msg":{"publisher":"messagebird"},"firestore-perspective-toxicity":{"publisher":"jigsaw"},"firestore-schedule-writes":{"publisher":"firebase"},"firestore-send-email":{"publisher":"firebase"},"firestore-sentiment-analysis":{"publisher":"firebase"},"firestore-shorten-urls-bitly":{"publisher":"firebase"},"firestore-shorten-urls-dynamic-links":{"publisher":"firebase"},"firestore-stripe-invoices":{"publisher":"stripe"},"firestore-stripe-subscriptions":{"publisher":"stripe"},"firestore-translate-text":{"publisher":"firebase"},"mailchimp-firebase-sync":{"publisher":"mailchimp"},"pubsub-stream-bigquery":{"publisher":"firebase"},"rtdb-limit-child-nodes":{"publisher":"firebase"},"storage-extract-image-text":{"publisher":"firebase"},"storage-image-labeling":{"publisher":"firebase"},"storage-mirror-firestore":{"publisher":"firebase"},"storage-resize-images":{"publisher":"firebase"},"firestore-elastic-app-search":{"publisher":"elastic"},"track-labels":{"publisher":"shipengine"},"calculate-rates":{"publisher":"shipengine"},"purchase-labels":{"publisher":"shipengine"},"validate-addresses":{"publisher":"shipengine"},"abandoned-cart-emails":{"publisher":"twilio"},"send-message":{"publisher":"twilio"},"sendgrid-sync-contacts":{"publisher":"twilio"},"make-payment":{"publisher":"google-pay"},"firestore-stripe-payments":{"publisher":"stripe"}},"featured":{"discover":["firestore-bigquery-export","firestore-send-email","firestore-algolia-search","firestore-stripe-payments","calculate-rates","abandoned-cart-emails","firestore-elastic-app-search","storage-resize-images","send-message","purchase-labels","track-labels","make-payment","validate-addresses","sendgrid-sync-contacts","mailchimp-firebase-sync","delete-user-data","firestore-translate-text","firestore-messagebird-send-msg","firestore-counter","firestore-stripe-invoices","firestore-shorten-urls-bitly","rtdb-limit-child-nodes"],"closed-alpha":[]}}
[debug] [2022-03-25T14:27:32.284Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/sunnus-22/billingInfo [none]
[debug] [2022-03-25T14:27:33.608Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/sunnus-22/billingInfo 200
[debug] [2022-03-25T14:27:33.608Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/sunnus-22/billingInfo {"name":"projects/sunnus-22/billingInfo","projectId":"sunnus-22","billingAccountName":"billingAccounts/017836-5CE911-6A49AA","billingEnabled":true}
[info] i  extensions: Trigger Email will enable the following APIs for project sunnus-22
- secretmanager.googleapis.com: To access and manage secrets which are used by this extension. By using this product you agree to the terms and conditions of the following license: https://console.cloud.google.com/tos?id=cloud&project=sunnus-22 
[info] i  extensions: ensuring required API secretmanager.googleapis.com is enabled... 
[debug] [2022-03-25T14:27:40.727Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com [none]
[debug] [2022-03-25T14:27:42.064Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com 200
[debug] [2022-03-25T14:27:42.065Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com {"name":"projects/114067060360/services/secretmanager.googleapis.com","config":{"name":"secretmanager.googleapis.com","title":"Secret Manager API","apis":[{"name":"google.cloud.location.Locations","methods":[{"name":"ListLocations"},{"name":"GetLocation"}],"version":"v1"},{"name":"google.cloud.secretmanager.v1.SecretManagerService","methods":[{"name":"ListSecrets"},{"name":"CreateSecret"},{"name":"AddSecretVersion"},{"name":"GetSecret"},{"name":"UpdateSecret"},{"name":"DeleteSecret"},{"name":"ListSecretVersions"},{"name":"GetSecretVersion"},{"name":"AccessSecretVersion"},{"name":"DisableSecretVersion"},{"name":"EnableSecretVersion"},{"name":"DestroySecretVersion"}],"version":"v1"},{"name":"google.cloud.secrets.v1beta1.SecretManagerService","methods":[{"name":"ListSecrets"},{"name":"CreateSecret"},{"name":"AddSecretVersion"},{"name":"GetSecret"},{"name":"UpdateSecret"},{"name":"DeleteSecret"},{"name":"ListSecretVersions"},{"name":"GetSecretVersion"},{"name":"AccessSecretVersion"},{"name":"DisableSecretVersion"},{"name":"EnableSecretVersion"},{"name":"DestroySecretVersion"}],"version":"v1beta1"},{"name":"google.discovery.Discovery","methods":[{"name":"GetDiscovery"},{"name":"GetDiscoveryRest"}],"version":"v1"}],"documentation":{"summary":"Stores sensitive data such as API keys, passwords, and certificates. Provides convenience while improving security.\n"},"quota":{"limits":[{"name":"ReadRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/read_requests","unit":"1/min/{project}","values":{"DEFAULT":"600"}},{"name":"AccessRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/access_requests","unit":"1/min/{project}","values":{"DEFAULT":"90000"}},{"name":"WriteRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/write_requests","unit":"1/min/{project}","values":{"DEFAULT":"600"}}]},"authentication":{"rules":[{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}}]},"usage":{"requirements":["serviceusage.googleapis.com/tos/cloud","serviceusage.googleapis.com/billing-enabled"]},"endpoints":[{"name":"secretmanager.googleapis.com"},{"name":"secretmanager.clients6.google.com"},{"name":"content-secretmanager.googleapis.com"},{"name":"secretmanager.mtls.googleapis.com"},{"name":"secretmanager.mtls.clients6.google.com"},{"name":"content-secretmanager.mtls.googleapis.com"}],"monitoring":{}},"state":"DISABLED","parent":"projects/114067060360"}
[warn] !  extensions: missing required API secretmanager.googleapis.com. Enabling now... 
[debug] [2022-03-25T14:27:42.066Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com:enable [none]
[debug] [2022-03-25T14:27:43.506Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com:enable 200
[debug] [2022-03-25T14:27:43.506Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com:enable {"name":"operations/acat.p2-114067060360-c33c28c5-8f5c-4d7f-98a3-293c98744e15"}
[debug] [2022-03-25T14:27:53.519Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com [none]
[debug] [2022-03-25T14:27:54.900Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com 200
[debug] [2022-03-25T14:27:54.900Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/sunnus-22/services/secretmanager.googleapis.com {"name":"projects/114067060360/services/secretmanager.googleapis.com","config":{"name":"secretmanager.googleapis.com","title":"Secret Manager API","apis":[{"name":"google.cloud.location.Locations","methods":[{"name":"ListLocations"},{"name":"GetLocation"}],"version":"v1"},{"name":"google.cloud.secretmanager.v1.SecretManagerService","methods":[{"name":"ListSecrets"},{"name":"CreateSecret"},{"name":"AddSecretVersion"},{"name":"GetSecret"},{"name":"UpdateSecret"},{"name":"DeleteSecret"},{"name":"ListSecretVersions"},{"name":"GetSecretVersion"},{"name":"AccessSecretVersion"},{"name":"DisableSecretVersion"},{"name":"EnableSecretVersion"},{"name":"DestroySecretVersion"}],"version":"v1"},{"name":"google.cloud.secrets.v1beta1.SecretManagerService","methods":[{"name":"ListSecrets"},{"name":"CreateSecret"},{"name":"AddSecretVersion"},{"name":"GetSecret"},{"name":"UpdateSecret"},{"name":"DeleteSecret"},{"name":"ListSecretVersions"},{"name":"GetSecretVersion"},{"name":"AccessSecretVersion"},{"name":"DisableSecretVersion"},{"name":"EnableSecretVersion"},{"name":"DestroySecretVersion"}],"version":"v1beta1"},{"name":"google.discovery.Discovery","methods":[{"name":"GetDiscovery"},{"name":"GetDiscoveryRest"}],"version":"v1"}],"documentation":{"summary":"Stores sensitive data such as API keys, passwords, and certificates. Provides convenience while improving security.\n"},"quota":{"limits":[{"name":"ReadRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/read_requests","unit":"1/min/{project}","values":{"DEFAULT":"600"}},{"name":"AccessRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/access_requests","unit":"1/min/{project}","values":{"DEFAULT":"90000"}},{"name":"WriteRequestsPerMinutePerProject","metric":"secretmanager.googleapis.com/write_requests","unit":"1/min/{project}","values":{"DEFAULT":"600"}}]},"authentication":{"rules":[{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}},{"oauth":{"canonicalScopes":"https://www.googleapis.com/auth/cloud-platform"}}]},"usage":{"requirements":["serviceusage.googleapis.com/tos/cloud","serviceusage.googleapis.com/billing-enabled"]},"endpoints":[{"name":"secretmanager.googleapis.com"},{"name":"secretmanager.clients6.google.com"},{"name":"content-secretmanager.googleapis.com"},{"name":"secretmanager.mtls.googleapis.com"},{"name":"secretmanager.mtls.clients6.google.com"},{"name":"content-secretmanager.mtls.googleapis.com"}],"monitoring":{}},"state":"ENABLED","parent":"projects/114067060360"}
[info] +  extensions: required API secretmanager.googleapis.com is enabled 
[debug] [2022-03-25T14:27:54.902Z] >>> [apiv2][query] GET https://iam.googleapis.com/v1/roles/datastore.user [none]
[debug] [2022-03-25T14:27:56.284Z] <<< [apiv2][status] GET https://iam.googleapis.com/v1/roles/datastore.user 200
[debug] [2022-03-25T14:27:56.285Z] <<< [apiv2][body] GET https://iam.googleapis.com/v1/roles/datastore.user {"name":"roles/datastore.user","title":"Cloud Datastore User","description":"Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.","includedPermissions":["appengine.applications.get","datastore.databases.get","datastore.databases.getMetadata","datastore.entities.allocateIds","datastore.entities.create","datastore.entities.delete","datastore.entities.get","datastore.entities.list","datastore.entities.update","datastore.indexes.list","datastore.namespaces.get","datastore.namespaces.list","datastore.statistics.get","datastore.statistics.list","resourcemanager.projects.get","resourcemanager.projects.list"],"stage":"GA","etag":"AA=="}
[info] i  extensions: Trigger Email will be granted the following access to project sunnus-22
- Cloud Datastore User (Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.) 
[debug] [2022-03-25T14:28:02.970Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances/firestore-send-email [none]
[debug] [2022-03-25T14:28:04.235Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances/firestore-send-email 404
[debug] [2022-03-25T14:28:04.235Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/sunnus-22/instances/firestore-send-email {"error":{"code":404,"message":"Instance `projects/sunnus-22/instances/firestore-send-email` was not found.","status":"NOT_FOUND"}}
[debug] [2022-03-25T14:28:19.071Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22/adminSdkConfig [none]
[debug] [2022-03-25T14:28:19.412Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22/adminSdkConfig 200
[debug] [2022-03-25T14:28:19.413Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22/adminSdkConfig {"projectId":"sunnus-22","storageBucket":"sunnus-22.appspot.com","locationId":"us-central"}
[debug] [2022-03-25T14:28:19.414Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 [none]
[debug] [2022-03-25T14:28:19.739Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 200
[debug] [2022-03-25T14:28:19.740Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/sunnus-22 {"projectId":"sunnus-22","projectNumber":"114067060360","displayName":"sunnus-22","name":"projects/sunnus-22","resources":{"hostingSite":"sunnus-22","storageBucket":"sunnus-22.appspot.com","locationId":"us-central"},"state":"ACTIVE"}
[info] i  extensions: answer the questions below to configure your extension: 
[info] 
Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the location selection guide (https://firebase.google.com/docs/functions/locations).
[info] 
SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the SMTP Password field for entering secrets and passwords. Passwords and secrets should now be included in SMTP password field.
Secure format:
 smtps://username@gmail.com@smtp.gmail.com:465 (username only)
 smtps://smtp.gmail.com:465 (No username and password)
Backwards Compatible (less secure):
 smtps://username@gmail.com:password@smtp.gmail.com:465. (username and password)
